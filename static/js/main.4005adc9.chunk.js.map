{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/TitleContainer/TitleContainer.jsx","components/Filter/Filter.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","styled","form","StyledInput","input","ContactForm","state","name","number","handleChange","currentTarget","value","setState","clearForm","handleSubmit","e","preventDefault","onSubmit","props","this","type","onChange","pattern","title","required","Component","StyledContactItem","li","StyledButton","button","ContactList","contacts","onDeleteContacts","map","contact","onClick","id","TitleContainer","children","Filter","App","filter","changeFilter","newContact","nanoid","normalizedName","toLowerCase","find","includes","alert","prevState","deleteContacts","getFilteredContacts","normalizedFilter","filteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4005adc9.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\npadding: 15px;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\ndisplay: block;\r\nmargin-bottom: 1rem;\r\n`;","import { Component } from 'react';\r\nimport { Form, StyledInput } from './ContactForm.styled';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = ({ currentTarget }) => {\r\n        const { name, value } = currentTarget;\r\n        this.setState({\r\n            [ name ]: value\r\n        });\r\n    };\r\n\r\n    clearForm = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { onSubmit } = this.props;\r\n        const { name, number } = this.state;\r\n        onSubmit(name, number);\r\n        this.clearForm();\r\n    };\r\n\r\n    render() {\r\n        const { number, name } = this.state;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    <h3>Name</h3>\r\n                    <StyledInput\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <h3>Number</h3>\r\n                    <StyledInput\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Add contact</button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import styled from '@emotion/styled';\r\n\r\nexport const StyledContactItem = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    max-width: 20rem;\r\n`;\r\nexport const StyledButton = styled.button`\r\n    margin-left: 1rem;\r\n    height: 25px;\r\n`;","import PropTypes from 'prop-types';\r\nimport { StyledContactItem, StyledButton } from './ContactList.styled';\r\n\r\n\r\nfunction ContactList({ contacts, onDeleteContacts }) {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {contacts && contacts.map(contact =>\r\n                    <StyledContactItem key={contact.id}>\r\n                        <p>{contact.name}: {contact.number}</p>\r\n                        <StyledButton type=\"button\" onClick={() => onDeleteContacts(contact.id)}>Delete</StyledButton>\r\n                    </StyledContactItem>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContacts: PropTypes.func.isRequired\r\n};","import React from 'react';\r\n\r\nfunction TitleContainer({ title, children }) {\r\n    return (\r\n        <div>\r\n            {title && <h2>{title}</h2>}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TitleContainer;","import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\r\n    // const { value, onChange } = this.props;\r\n    return (\r\n        <div>\r\n            <label >\r\n                Filter <input value={value} onChange={onChange} />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\nexport default Filter;","import { Component } from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport TitleContainer from './components/TitleContainer';\r\nimport { nanoid } from 'nanoid';\r\nimport Filter from './components/Filter';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [ { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' } ],\r\n    filter: '',\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({\r\n      filter: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = (name, number) => {\r\n    const randomID = nanoid();\r\n    const newContact = { id: randomID, name, number };\r\n    const normalizedName = name.toLowerCase();\r\n    const findSameContact = this.state.contacts.find(contact => contact.name.toLowerCase().includes(normalizedName));\r\n    findSameContact ?\r\n      alert(`\"${name}\" is already exist in contacts`)\r\n      : this.setState((prevState) => ({\r\n        contacts: [ ...prevState.contacts, newContact ],\r\n      }));\r\n  };\r\n\r\n  deleteContacts = (id) => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id)\r\n    }));\r\n  };\r\n\r\n  // ВСЕГДА ОТ PrevState!!!! НЕЛЬЗЯ ИЗМЕНЯТЬ/МУТИРОВАТЬ СУЩЕСТВУЮЩИЙ СТЕЙТ!!!!!!!! внизу как делать НЕ НАДО!\r\n\r\n  // deleteContacts = (id) => {\r\n  //   this.setState({\r\n  //     contacts: this.state.contacts.filter(contact => contact.id !== id)\r\n  //   });\r\n  // };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   console.log(prevState.contacts === this.state.contacts);\r\n  // };\r\n\r\n\r\n  getFilteredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return <>\r\n      <TitleContainer title='Phonebook'>\r\n        <ContactForm contacts={contacts} onSubmit={this.handleSubmit} />\r\n      </TitleContainer>\r\n      <TitleContainer title='Contacts'>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList contacts={filteredContacts} onDeleteContacts={this.deleteContacts} />\r\n      </TitleContainer>\r\n    </ >;\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}